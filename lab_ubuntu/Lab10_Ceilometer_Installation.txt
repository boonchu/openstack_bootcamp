-------------------------------------------------------------------------------------------------
Lab 10: Telemetry Service (Ceilometer) Installation
-------------------------------------------------------------------------------------------------

The Telemetry module:
➢	Efficiently collets the metering data about the CPI and network costs.
➢	Collects data by monitoring notifications sent from servers or by polling the infrastructures
➢	Configures the type of collected data to meet various operating requirements. Accessing and inserting metering data through the REST API.
➢	Expands the framework to collect custom usage data by additional plug-ins.
➢	Produces signed metering messages that cannot be repudiated.

Step 1:
SSH to AIO node with the credentials in Lab access
Enter following command 
sudo su -
source openrc.sh
Telemetry Module Installation on AIO Node
Telemetry provides an API service that provides a collector and a range of disparate agents. Before you can install these agents on nodes such as the compute node, you must use this procedure to install the core components on the controller node.

Step 2:
apt-get install ceilometer-api ceilometer-collector ceilometer-agent-central ceilometer-agent-notification ceilometer-alarm-evaluator ceilometer-alarm-notifier python-ceilometerclient 
Since we have installed Compute in AIOX, we need install ceilometer agent for compute
apt-get install ceilometer-agent-compute
Create Database for Telemetry Service
The Telemetry service uses a database to store information. Specify the location of the database in the configuration file. The examples use a MySQL database on the controller node:

Step 3:
mysql -u root -ppass
mysql> CREATE DATABASE ceilometer;
mysql> GRANT ALL PRIVILEGES ON ceilometer.* TO 'ceilometer'@'localhost' IDENTIFIED BY 'pass';
mysql> GRANT ALL PRIVILEGES ON ceilometer.* TO 'ceilometer'@'%' IDENTIFIED BY 'pass';
mysql> exit

Step 4:
By default, the Ubuntu packages create a SQLite database. Delete the ceilometer.sqlite file created in the /var/lib/ceilometer/ directory so that it does not get used by mistake.
rm /var/lib/ceilometer/ceilometer.sqlite

Step 5:
Create a ceilometer user that the Telemetry service uses to authenticate with the Identity Service. Use the service tenant and give the user the admin role:
keystone user-create --name=ceilometer --pass=pass --email=ceilometer@onecloud.com
keystone user-role-add --user=ceilometer --tenant=service --role=admin
Define services and service endpoints

Step 6:
Register the Telemetry service with the Identity Service so that other OpenStack services can locate it. Use the keystone command to register the service and specify the endpoint:
keystone service-create --name=ceilometer --type=metering --description="Telemetry"
Note: Create the service end point for the service. Change X with AIO node Number

keystone endpoint-create \
--service-id=$(keystone service-list | awk '/ metering / {print $2}') \
--publicurl=http://aioX:8777 \
--internalurl=http://aioX:8777 \
--adminurl=http://aioX:8777
Configure Ceilometer Service

Step 7:
Edit /etc/ceilometer/ceilometer.conf
vi /etc/ceilometer/ceilometer.conf
Uncomment and Update the following in [Default] Section

[DEFAULT]
…
auth_strategy = keystone
...
log_dir = /var/log/ceilometer
…
rabbit_host = aioX
…
rabbit_password = pass
Update the following in [database] Section
[database]
connection = mysql://ceilometer:pass@aioX/ceilometer
Uncomment and Update the following in [keystone_authtoken] Section
[keystone_authtoken]
auth_host = aioX
auth_port = 35357
auth_protocol = http
auth_uri = http://aioX:5000
admin_user = ceilometer
admin_password = pass
admin_tenant_name = service

Uncomment and Update the following in [publisher] Section
[publisher]
metering_secret = pass

Uncomment and Update the following in [service_credentials] Section

[service_credentials]
os_username = ceilometer
os_password = pass
os_tenant_name = service
os_auth_url = http://aioX:5000/v2.0

Configure Compute agent for Telemetry
Telemetry provides an API service that provides a collector and a range of disparate agents. This procedure details how to install the agent that runs on the compute node.
Step 8:
Edit the /etc/nova/nova.conf file and add the following lines to the [DEFAULT] section:
vi /etc/nova/nova.conf
[DEFAULT]
…
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier
Configure the Image Service for Telemetry

Step 9: 
To retrieve image samples, you must configure the Image Service to send notifications to the bus.
Edit /etc/glance/glance-api.conf 
Uncomment and modify the [DEFAULT] section:
notification_driver = messaging
rpc_backend = rabbit
rabbit_host = aioX
rabbit_password = pass
Add Block Storage service agent for Telemetry

Step 10:
To retrieve volume samples, you must configure the Block Storage service to send notifications to the bus.
Edit /etc/cinder/cinder.conf and add in the [DEFAULT] section on the controller and volume nodes:
vi /etc/cinder/cinder.conf 
control_exchange = cinder
notification_driver = cinder.openstack.common.notifier.rpc_notifier

Step 11:
Run the following command to populate database
ceilometer-dbsync
Restart the following service
service ceilometer-agent-central restart
service ceilometer-agent-notification restart
service ceilometer-api restart
service ceilometer-collector restart
service ceilometer-alarm-evaluator restart
service ceilometer-alarm-notifier restart
service ceilometer-agent-compute restart
service glance-registry restart
service glance-api restart
service cinder-api restart
service cinder-scheduler restart
service cinder-volume restart
service nova-compute restart

Step 12:
Use the ceilometer meter-list command to test the access to Telemetry:
ceilometer meter-list

-------------------------------------------------------------------------------------------------
*****   Lab 10a: Telemetry Service (Ceilometer) Installation on Compute Node   *****
-------------------------------------------------------------------------------------------------

Install the Telemetry service on the compute node(ComputeY):

Step 1:
Log On to ComputeY and type following commands
sudo su -
Install telemetry agent for compute to collect information from Compute Node.
apt-get install ceilometer-agent-compute

Step 2:
Edit the /etc/nova/nova.conf file and add the following lines to the [DEFAULT] section:

[DEFAULT]
...
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier

Configure Ceilometer Service

Step 3:
Edit /etc/ceilometer/ceilometer.conf
vi /etc/ceilometer/ceilometer.conf
Uncomment and Update the following in [Default] Section

[DEFAULT]
…
log_dir = /var/log/ceilometer
…
rabbit_host = aioX
…
rabbit_password = pass

Update the following in [database] Section
[database]
connection = mysql://ceilometer:pass@aioX/ceilometer

Uncomment and Update the following in [keystone_authtoken] Section
[keystone_authtoken]
auth_host = aioX
auth_port = 35357
auth_protocol = http
auth_uri = http://aioX:5000
admin_user = ceilometer
admin_password = pass
admin_tenant_name = service

Uncomment and Update the following in [publisher] Section
[publisher]
metering_secret = pass

Uncomment and Update the following in [service_credentials] Section

[service_credentials]
os_username = ceilometer
os_password = pass
os_tenant_name = service
os_auth_url = http://aioX:5000/v2.0

Step 4:
Restart the following service
service nova-compute restart
service ceilometer-agent-compute restart
Verify the Telemetry service installation

Step 5:
Download an image from the Image Service:
glance image-download "CirrOS 0.3.2" > cirros.img
You can now get usage statistics for the various meters:
ceilometer statistics -m image.download -p 60
This command will give a statistics of image download meter.

Step 6:
Log on to Openstack Dashboard by Open the webbrowser and type http://aio node IP address/horizon. Type user name as admin and password as pass

Goto Admin → System Panel →Resource Usage
Click Stats and check for different Metric
Telemetry Service is now installed successfully. 
Lab 10: Telemetry Service Installation
-------------------------------------------------------------------------------------------------

The Telemetry module:
➢	Efficiently collets the metering data about the CPI and network costs.
➢	Collects data by monitoring notifications sent from servers or by polling the infrastructures
➢	Configures the type of collected data to meet various operating requirements. Accessing and inserting metering data through the REST API.
➢	Expands the framework to collect custom usage data by additional plug-ins.
➢	Produces signed metering messages that cannot be repudiated.

Step 1:
SSH to AIO node with the credentials in Lab access
Enter following command 
sudo su -
source openrc.sh
Telemetry Module Installation on AIO Node
Telemetry provides an API service that provides a collector and a range of disparate agents. Before you can install these agents on nodes such as the compute node, you must use this procedure to install the core components on the controller node.

Step 2:
apt-get install ceilometer-api ceilometer-collector ceilometer-agent-central ceilometer-agent-notification ceilometer-alarm-evaluator ceilometer-alarm-notifier python-ceilometerclient 
Since we have installed Compute in AIOX, we need install ceilometer agent for compute
apt-get install ceilometer-agent-compute
Create Database for Telemetry Service
The Telemetry service uses a database to store information. Specify the location of the database in the configuration file. The examples use a MySQL database on the controller node:

Step 3:
mysql -u root -ppass
mysql> CREATE DATABASE ceilometer;
mysql> GRANT ALL PRIVILEGES ON ceilometer.* TO 'ceilometer'@'localhost' IDENTIFIED BY 'pass';
mysql> GRANT ALL PRIVILEGES ON ceilometer.* TO 'ceilometer'@'%' IDENTIFIED BY 'pass';
mysql> exit

Step 4:
By default, the Ubuntu packages create a SQLite database. Delete the ceilometer.sqlite file created in the /var/lib/ceilometer/ directory so that it does not get used by mistake.
rm /var/lib/ceilometer/ceilometer.sqlite

Step 5:
Create a ceilometer user that the Telemetry service uses to authenticate with the Identity Service. Use the service tenant and give the user the admin role:
keystone user-create --name=ceilometer --pass=pass --email=ceilometer@onecloud.com
keystone user-role-add --user=ceilometer --tenant=service --role=admin
Define services and service endpoints

Step 6:
Register the Telemetry service with the Identity Service so that other OpenStack services can locate it. Use the keystone command to register the service and specify the endpoint:
keystone service-create --name=ceilometer --type=metering --description="Telemetry"
Note: Create the service end point for the service. Change X with AIO node Number

keystone endpoint-create \
--service-id=$(keystone service-list | awk '/ metering / {print $2}') \
--publicurl=http://aioX:8777 \
--internalurl=http://aioX:8777 \
--adminurl=http://aioX:8777
Configure Ceilometer Service

Step 7:
Edit /etc/ceilometer/ceilometer.conf
vi /etc/ceilometer/ceilometer.conf
Uncomment and Update the following in [Default] Section

[DEFAULT]
…
auth_strategy = keystone
...
log_dir = /var/log/ceilometer
…
rabbit_host = aioX
…
rabbit_password = pass
Update the following in [database] Section
[database]
connection = mysql://ceilometer:pass@aioX/ceilometer
Uncomment and Update the following in [keystone_authtoken] Section
[keystone_authtoken]
auth_host = aioX
auth_port = 35357
auth_protocol = http
auth_uri = http://aioX:5000
admin_user = ceilometer
admin_password = pass
admin_tenant_name = service

Uncomment and Update the following in [publisher] Section
[publisher]
metering_secret = pass

Uncomment and Update the following in [service_credentials] Section

[service_credentials]
os_username = ceilometer
os_password = pass
os_tenant_name = service
os_auth_url = http://aioX:5000/v2.0

Configure Compute agent for Telemetry
Telemetry provides an API service that provides a collector and a range of disparate agents. This procedure details how to install the agent that runs on the compute node.
Step 8:
Edit the /etc/nova/nova.conf file and add the following lines to the [DEFAULT] section:
vi /etc/nova/nova.conf
[DEFAULT]
…
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier
Configure the Image Service for Telemetry

Step 9: 
To retrieve image samples, you must configure the Image Service to send notifications to the bus.
Edit /etc/glance/glance-api.conf 
Uncomment and modify the [DEFAULT] section:
notification_driver = messaging
rpc_backend = rabbit
rabbit_host = aioX
rabbit_password = pass
Add Block Storage service agent for Telemetry

Step 10:
To retrieve volume samples, you must configure the Block Storage service to send notifications to the bus.
Edit /etc/cinder/cinder.conf and add in the [DEFAULT] section on the controller and volume nodes:
vi /etc/cinder/cinder.conf 
control_exchange = cinder
notification_driver = cinder.openstack.common.notifier.rpc_notifier

Step 11:
Run the following command to populate database
ceilometer-dbsync
Restart the following service
service ceilometer-agent-central restart
service ceilometer-agent-notification restart
service ceilometer-api restart
service ceilometer-collector restart
service ceilometer-alarm-evaluator restart
service ceilometer-alarm-notifier restart
service ceilometer-agent-compute restart
service glance-registry restart
service glance-api restart
service cinder-api restart
service cinder-scheduler restart
service cinder-volume restart
service nova-compute restart

Step 12:
Use the ceilometer meter-list command to test the access to Telemetry:
ceilometer meter-list

-------------------------------------------------------------------------------------------------
*****   Lab 10a: Telemetry Service Installation on Compute Node   *****
-------------------------------------------------------------------------------------------------

Install the Telemetry service on the compute node(ComputeY):

Step 1:
Log On to ComputeY and type following commands
sudo su -
Install telemetry agent for compute to collect information from Compute Node.
apt-get install ceilometer-agent-compute

Step 2:
Edit the /etc/nova/nova.conf file and add the following lines to the [DEFAULT] section:

[DEFAULT]
...
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier

Configure Ceilometer Service

Step 3:
Edit /etc/ceilometer/ceilometer.conf
vi /etc/ceilometer/ceilometer.conf
Uncomment and Update the following in [Default] Section

[DEFAULT]
…
log_dir = /var/log/ceilometer
…
rabbit_host = aioX
…
rabbit_password = pass

Update the following in [database] Section
[database]
connection = mysql://ceilometer:pass@aioX/ceilometer

Uncomment and Update the following in [keystone_authtoken] Section
[keystone_authtoken]
auth_host = aioX
auth_port = 35357
auth_protocol = http
auth_uri = http://aioX:5000
admin_user = ceilometer
admin_password = pass
admin_tenant_name = service

Uncomment and Update the following in [publisher] Section
[publisher]
metering_secret = pass

Uncomment and Update the following in [service_credentials] Section

[service_credentials]
os_username = ceilometer
os_password = pass
os_tenant_name = service
os_auth_url = http://aioX:5000/v2.0

Step 4:
Restart the following service
service nova-compute restart
service ceilometer-agent-compute restart
Verify the Telemetry service installation

Step 5:
Download an image from the Image Service:
glance image-download "CirrOS 0.3.2" > cirros.img
You can now get usage statistics for the various meters:
ceilometer statistics -m image.download -p 60
This command will give a statistics of image download meter.

Step 6:
Log on to Openstack Dashboard by Open the webbrowser and type http://aio node IP address/horizon. Type user name as admin and password as pass

Goto Admin → System Panel →Resource Usage
Click Stats and check for different Metric
Telemetry Service is now installed successfully. 
