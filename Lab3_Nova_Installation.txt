-------------------------------------------------------------------------------------------------
*****   Lab 3: Compute Service (Nova) Installation   *****
-------------------------------------------------------------------------------------------------

The Compute service is a cloud computing fabric controller, which is the main part of an IaaS system. Use it to host and manage cloud computing systems.
Compute interacts with the Identity Service for authentication, Image Service for images, and the Dashboard for the user and administrative interface. Access to images is limited by project and by user; quotas are limited per project (for example, the number of instances). The Compute service scales horizontally on standard hardware, and downloads images to launch instances as required.
Compute Service Installation
SSH to AIO node with the credentials in Lab access
Enter following command and Type pass as the [sudo] password

Step 1:
sudo su -
source ~/openrc.sh
Install Compute Controller Service packages

Step 2:
Install these Compute packages, which provide the Compute services that run on the controller node.
apt-get install nova-api nova-cert nova-conductor nova-consoleauth nova-novncproxy nova-scheduler python-novaclient -y
Install Compute Node packages

Step 3:
Install the appropriate packages for the Compute service.
apt-get install nova-compute-kvm python-guestfs -y
To make the current kernel readable, run the following command
dpkg-statoverride  --update --add root root 0644 /boot/vmlinuz-$(uname -r)
Create Database for Compute Service

Step 4:
Create Database nova for Compute service by login to mysql with password as pass
mysql -uroot -ppass
CREATE DATABASE nova;
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'pass';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'pass';
exit

Step 5:
By default, the Ubuntu packages create a SQLite database. Delete the nova.sqlite file created in the /var/lib/nova/ directory so that it does not get used by mistake.
rm /var/lib/nova/nova.sqlite

Step 6:
Create a nova user that Compute uses to authenticate with the Identity Service. Use the service tenant and give the user the admin role: (X Student POD Number)
keystone user-create --name=nova --pass=pass --email=nova@onecloud.com
+----------+----------------------------------+
| Property |              Value               |
+----------+----------------------------------+
|  email   |        nova@onecloud.com         |
| enabled  |               True               |
|    id    | 0b3c90d65d514fce813666320cb7b103 |
|   name   |               nova               |
| username |               nova               |
+----------+----------------------------------+

keystone user-role-add --user=nova --tenant=service --role=admin
Configure Compute Service
Update nova.conf 

Step 7:
Edit /etc/nova/nova.conf 
vi /etc/nova/nova.conf
Configure the Compute Service to use the RabbitMQ message broker by adding these configuration keys at the end of [DEFAULT] section

vif_plugging_is_fatal=false
vif_plugging_timeout=0
rpc_backend =rabbit
rabbit_host=aioX
rabbit_password=pass
Add the my_ip, vncserver_listen, and vncserver_proxyclient_address configuration options to to the [DEFAULT] section: To get vnc acces from the pod machine give IP address instead of hostname.
my_ip=10.1.64.1X
vnc_enabled = True
vncserver_listen=10.1.64.1X
vncserver_proxyclient_address=10.1.64.1X
novncproxy_base_url=http://10.1.64.1X:6080/vnc_auto.html

auth_strategy=keystone
glance_host=aioX


To configure the location of the database, add following lines to the [database] and [keystone_authtoken] section: 

[database]
connection = mysql://nova:pass@aioX/nova

[keystone_authtoken]
auth_uri = http://aioX:5000
auth_host = aioX
auth_port = 35357
auth_protocol = http
admin_tenant_name = service
admin_user = nova
admin_password = pass
Press Esc and Type :wq to Save the file.
Edit Nova-Compute.Conf

Step 8:
Edit the [libvirt] section in the /etc/nova/nova-compute.conf
vi /etc/nova/nova-compute.conf
virt_type=qemu
Press Esc and Type :wq to Save the file.
Define services and service endpoints
Register the Compute service and specify the endpoint: (X Student POD Number)

Step 9:
keystone service-create --name=nova --type=compute --description="Nova Compute service"
+-------------+----------------------------------+
|   Property  |              Value               |
+-------------+----------------------------------+
| description |       Nova Compute service       |
|   enabled   |               True               |
|      id     | 3c85f9ccd55d4485a4096ff4a014e593 |
|     name    |               nova               |
|     type    |             compute              |
+-------------+----------------------------------+

Note: Copy the Service id to use in endpoint-create command. Or we can use keystone service-list | awk '/ compute / {print $2}' to get the service id of type compute.


Note: Change X with AIO node Number

keystone endpoint-create --service-id=$(keystone service-list | awk '/ compute / {print $2}') --publicurl=http://aioX:8774/v2/%\(tenant_id\)s --internalurl=http://aioX:8774/v2/%\(tenant_id\)s --adminurl=http://aioX:8774/v2/%\(tenant_id\)s
+-------------+------------------------------------+
|   Property  |               Value                |
+-------------+------------------------------------+
|   adminurl  | http://aio51:8774/v2/%(tenant_id)s |
|      id     |  5c1c4cada2ea41299c53a31df57be562  |
| internalurl | http://aio51:8774/v2/%(tenant_id)s |
|  publicurl  | http://aio51:8774/v2/%(tenant_id)s |
|    region   |             regionOne              |
|  service_id |  3c85f9ccd55d4485a4096ff4a014e593  |
+-------------+------------------------------------+

Step 10:
Create the database tables for the nova database and Restart nova services
su -s /bin/sh -c "nova-manage db sync" nova
service nova-api restart
service nova-cert restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart 
service nova-compute restart
Compute Service is installed successfully.
